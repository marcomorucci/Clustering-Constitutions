install.packages("reshape2")
library(reshape2)
melt
q()
library(caret)
q()
install.packages("knitr")
.packages
.packages()
packages()
.packages()
data(mtcars)
head(mtcars)
?mtcars
fit = lm(mpg~am, data=mtcars)
summary(fit)
fit = lm(mpg~am+wt+cyl, data=mtcars)
summary(fit)
library(swirl)
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent, galton)
regrline = lm(child~parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit = lm(child~parent, galton)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varEst)
all.equal(varChild, varEst+varRes)
efit <- lm(accel~mag+dist | attenu)
efit <- lm(accel~mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor~gpa_nor)
fit <- lm(child~parent, galton)
sqrt(sum(fit$residuals)/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
asd
sRes <- deviance(lm(child~parent,galton))
sRes <- deviance(fit)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child~ones+parent -1, galton)
lm(child~parent, galton)
lm(child~1, galton)
View(trees)
fit <- lm(Volume~Girth+Height+Constant-1,trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume~Height+Constant-1,trees2)
lapply(list(fit,fit2),coef)
all <- lm(Fertility~.,swiss)
summary(all)
summary(lm(Fertility~agriculture, swiss))
summary(lm(Fertility~Agriculture, swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Education +swiss$Catholic
ec <- swiss$Examination+swiss$Catholic
efit <- lm(Fertility~.+ec,data=swiss)
all$coefficientss-efit$coefficients
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
A
q
a
sA
summary(InsectSprays[,2])
sapply(class(InsectSprays[,2]))
sapply(InsectSprays,class)
fit <- lm(count~spray,InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray-1)
nfit <- lm(count~spray-1,data=InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count~spray2,InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.601
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year,data=hunger)
fit$coef
summary(fit)$coef
lmF <- lm(Numeric~Year, hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter <- (Numeric~Year+Sex+Sex*Year,hunger)
lmInter <- lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
fit <- lm(y~x,out2)
plot(fit,which=1)
fitno <-(y~x,out2[-1,])
fitno <-lm(y~x,out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
hatvalues(fit)
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/resid(fit)$df)
sigma <- sqrt(deviance(fit)/resid(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandartd(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit,which=3)
plot(fit,which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fit))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]<-sigma1*sqrt(1-hatvalues(fit)[Â«])
resid(fit)[1]<-sigma1*sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/sigma1*sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit)[1])
head(rstudent(fit)[1])
head(rstudent(fit))
dy = predict(fitno,out2)-predict(fit,out2)
sum(dy^2)/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit,which=5)
rgp1()
rgp2()
View(swiss)
View(swiss)
mdl <- lm(Fertility ~ ., swiss
)
vif(mdl)
mdl2 <- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortalit,data=swiss)
mdl2 <- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality,data=swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c,1,mean)
fit1 <- lm(Fertility~Agriculture,swiss)
fit3 <- lm(Fertility~Agriculture+Examination+Education)
fit3 <- lm(Fertility~Agriculture+Examination+Education,swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)-deviance(fit3)
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
ravenData
mdl <- glm(ravenWinNum~ravenScore,family="binomial",data=ravenData)
lodds <- predict(mdl,data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000,50))
nxt()
View(hits)
class(hits[,"date"])
as.integer(head(hits[,"date"]))
mdl <-glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl,"date"))
which.max(hits[,'visits'])
hits[704,]
mdl$fitted.values[704]
lambda <- mdl$fitted.values[704]
qpois(.95,lambda)
mdl2 <- glm(Visits~Date,family="poisson",offset=log(visits+1),data=hits)
mdl2 <- glm(visits~date,family="poisson",offset=log(visits+1),data=hits)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,offset = log(visits + 1))
qpois(.95,mdl$fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
.packages()
q()
data(mtcars)
View(mtcars)
?mtcars
plot(mtcars$mpg~mtcars$am)
?plot
?hist
boxplot
?boxplot
boxplot(mtcars$mpg~mtcars$am)
?mtcars
?boxplot
boxplot(mtcars$mpg~mtcars$am,names=c("Automatic","Manual"))
summary(mtcars$mpg)
var(mtcars$mpg)
sd(mtcars$mpg)
cor(mtcars$mpg, mtcars$am)
cor(mtcars$mpg, mtcars$wt)
cor(mtcars$mpg, mtcars$am)
cor(mtcars$mpg, mtcars$cyl)
nrow(mtcars)
ncol(mtcars)
?mtcars
length(mtcars[mtcars$am==1],)
length(mtcars$am==1,)
length([mtcars$am==1,])
length(mtcars[mtcars$am==1,])
nrow(mtcars[mtcars$am==1,])
nrow(mtcars[mtcars$am==0,])
13+19
summary(mtcars[mtcars$am==1,])
summary(mtcars[mtcars$am==1,"mpg"])
?boxplot
xlab
xlabel
xLable
xLabel
labs
cor(mtcars)
cor(cbind(mtcars$mpg, mtcars$am),mtcars[,-c(1,2)])
cor(cbind(MPG=mtcars$mpg, Trans=mtcars$am),mtcars[,-c(1,2)])
cor(cbind(MPG=mtcars$mpg, Trans=mtcars$am),mtcars[,-c(1,9)])
fit1 = lm(mpg~am,mtcars)
summary(fit1)
controlModel = lm(mpg~am+cyl+wt,mtcars)
summary(controlModel)
bModel = lm(mpg~am,mtcars)
anova(bModel,controlModel)
fullModel = lm(mpg~.,mtcars)
summary(fullModel)
anova(bModel,fullModel,controlModel)
cModel = lm(mpg~am+cyl,mtcars)
summary(cModel)
wModel = lm(mpg~am+wt,mtcars)
wModel
summary(wModel)
summary(controlModel)
summary(aModel)
summary(bModel)
vif(bModel)
dgcModel = lm(mpg~am+drat+gear+carb,data=mtcars)
summary(dgcModel)
dgcModel = lm(mpg~am+drat+gear+carb+wt+cyl,data=mtcars)
summary(dgcModel)
dgcModel = lm(mpg~am+drat+gear+carb,data=mtcars)
allModel = lm(mpg~am+drat+gear+carb+wt+cyl,data=mtcars)
anova(bModel,controlModel,dgcModel,allModel)
summary(dgcModel)
lm(mpg~am+wt+cyl+drat)
summary(lm(mpg~am+wt+cyl+drat,data=mtcars))
summary(lm(mpg~am+wt+cyl+carb,data=mtcars))
summary(lm(mpg~am+wt+cyl+gear,data=mtcars))
twcc = lm(mpg~am+wt+cyl+carb,mtcars)
anova(bModel,controlModel,dgcModel,twcc,allModel)
anova(bModel,controlModel,dgcModel,twcc)
anova(bModel,controlModel,dgcModel)
anova(bModel,controlModel,dgcModel)
anova(bModel,dgcModel,controlModel)
?anova
t = lm(mpg~am,mtcars)
anova(t)
anova(aov(t))
twc = update(t,mpg~am+wt+cyl)
anova(t,twc)
twcc = update(t,mpg~am+wt+cyl+carb)
anova(t,twc,twcc)
twccdg = update(t,mpg~am+wt+cyl+carb+drat+gear)
anova(t,twc,twcc,twccdg)
twc
plot(mtcars$am~resid(twc))
plot(resid(twc)~mtcars$am)
plot(resid(twc)~mtcars$wt)
plot(resid(twc)~mtcars$cyl)
par(mfrow=c(2,2))
plot(resid(twc)~mtcars$am)
plot(resid(twc)~mtcars$wt)
plot(resid(twc)~mtcars$cyl)
?lm
plot(twc$residuals~twc$fitted.values)
plot(twc,which=1)
plot(twc,which=2)
plot(twc,which=3)
plot(twc,which=4)
plot(twc,which=5)
plot(twc,which=6)
plot(twc,which=7)
plot(twc,which=1)
plot(twc,which=1)
par(mfrow=c(1,1))
par(mfrow=c(1,1))
plot(twc,which=1)
plot(twc,which=2)
plot(twc,which=3)
plot(twc,which=4)
plot(twc,which=5)
hatvalues(twc)
plot(twc,which=1)
par(mfrow(1,3))
par(mfrow=c(1,3))
plot(twc,which=1)
plot(twc,which=1)
par(mfrow(1,1))
par(mfrow=c(1,1))
dfbetas(twc)
summary(dfbetas(twc))
summary(hatvalues(twc))
summary(round(dfbetas(twc)))
round(dfbetas(twc))
round(dfbetas(twc),3)
summary(round(dfbetas(twc),3))
round(summary(dfbetas(twc)),3)
summary(dfbetas(twc))
plot(twc,which=1)
plot(twc,which=2)
plot(twc,which=3)
?cooks.distance
cooks.distance(twc)
hatvalues(twc)
plot(twc,which=2)
plot(twc,which=1)
plot(twc$residuals~mtcars$am)
plot(twc$residuals~mtcars$am,pch=20)
boxPlot(twc$residuals~mtcars$am,pch=20)
boxplot(twc$residuals~mtcars$am,pch=20)
plot(twc$residuals~mtcars$am,pch=20)
plot(twc$residuals~mtcars$wt,pch=20)
plot(twc$residuals~mtcars$cyl,pch=20)
boxplot(twc$residuals~mtcars$cyl,pch=20)
plot(twc$residuals~mtcars$cyl,pch=20)
twcInt = lm(mpg~am+wt+cyl+cyl*am)
twcInt = lm(mpg~am+wt+cyl+cyl*am,mtcars)
summary(twcInt)
twcInt = lm(mpg~am+wt+cyl+cyl*am+wt*am,mtcars)
summary(twcInt)
twcInt = lm(mpg~am+wt+cyl+cyl*am+wt*am+wt*cyl,mtcars)
summary(twcInt)
twcInt = lm(mpg~am+wt+cyl+cyl*am+wt*am,mtcars)
summary(twcInt)
twcInt = lm(mpg~am+wt+cyl+cyl*am,mtcars)
summary(twcInt)
twcInt = lm(mpg~am+wt+cyl+wt*am,mtcars)
summary(twcInt)
install.packages("~/Copy/projects/datascience/regression/pgmm_1.0.tar.gz", repos = NULL, type = "source")
library(pgmm)
data(olive)
olive = olive[,-1]
newdata = as.data.frame(t(colMeans(olive)))
library(caret)
fit = train(Area~.,method="rpart",data=olive)
predict(fit,newdata)
fit = train(Area~.,method="party",data=olive)
?train
fit = train(Area~.,method="rpart",data=olive)
predict(fit,newdata)
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
names(vowel.train)
class(vowel.train[,1])
vowel.train$y = as.factor(vowel.train$y)
vowel.test$y = as.factor(vowel.test$y)
fit = train(y~.,method="rf",data=vowel.train)
varlmp(fit)
varImp(fit)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
names(SAheart)
fit = train(chd~age+alcohol+obesity+tobacco+typea+ldl,method="glm",data=trainSA)
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
pre = predict(fit,testSA)
val = testSA$chd
missClass(val,pre)
tVal = trainSA$chd
missClass(tVal,pre)
tPre = predict(fit,trainSA)
missClass(tVal,tPre)
library(Amelia)
wdi = read.csv("data/wdi_econ_1980.csv")
wdi = read.csv("data/WDI_econ_1980.csv")
wdi = read.csv("data/WDI_2005.csv")
library(xlsx)
library(ggplot2)
setwd("~/Copy/projects/constitutions/output/sample_run")
tw = read.csv("topWords.csv")
tw
g = ggplot(tw)
g + geom_bar(aes(fill=cluster), position="dodge", stat="identity")
traceback()
g + geom_bar(aes(fill=cluster), position="dodge", stat="identity")
traceback()
traceback()
g = ggplot(tw)
g = ggplot(tw, aes(name, value))
g + geom_bar(aes(fill=cluster), position="dodge", stat="identity")
colnames(tw)
g = ggplot(tw, aes(x=colnames(tw), y=value))
g
g = ggplot(tw, aes(x=colnames(tw), y=value, fill=cluster))
g
g + geom_bar(stat="identity", position="stack")
